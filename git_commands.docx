------------ COMMITS & STAGING -----------
git add + name of the file
move the file to staging area

git add  .
move all the files to staging area 

git commit -m "MSG"
save changes

git init
initialize the repo

------------ LOG & STATUS -------------

git status
know the current status of the files in the working directory

git log
show the log of the current repo or branch

🚨🚨🚨🚨🚨🚨🚨🚨🚨🚨🚨🚨

عشان احذف commit
  كنت بعمل حاجه من اتنين دول

**git reset ( --hard || --soft ) head~(N)**
n --> number of commits to be removed 

طب لو انا حذفت commit
 بالغلط او حذفتها واكتشفت اني محتاجها؟
هرجعها ازاى!!
** git reset + id of the commit **

طب لو مش معايا ال id بتاع الcommit 
هستخدم الامر ده عشان ارجع ب ال history بتاع الريبو كله

**git reflog **

هيديك ال id
 بتاع ال commit ومن هنا تقدر ترجعها 
**git reset --hard +( ID of the commit)**

-------------------------------------
git checkout + commit ID 
to move to the latest project changes until the specified commit 

git checkout + branch name 
move to(swicth to) the latest project changes in the branch 

-----------------🚨Branching🚨-----------------------
انواع ال branches:
local branch --> local workspace repo
remote branch -->remote repo
remote tracking branch --> copy of the remote branch (used while making merge )
local tracking branch -->  local branches exists locally tracking remote branches BECAUSE we applied setup stream (-u) on it to track remote 

برانش لوكال عادي بس عملتله سيتب استريم عشان يعمل تراك للريموت برانشززززز

عشان كده مش بتحتاج تكتب 
origin - name of the branch

            ------------
            
git branch 
show branches on the working directory 

git branch + name of branch 
create a branch

git checkout +name of the branch 
move(switch) to the specified branch

git checkout -b + name of branch
create a new branch and switch to it in one step 

git switch + name of the branch 
to switch from branch to another

git switch -c +name of the branch
creates a new branch and switch to it in one step

__

to show **(local only) **branches  :
**git branch **

to  show all branches created** (Local and Remote) **:
**git branch -a**
-a -->  for all

to show the **Remote **branches only:

**git branch -r**

to publish a branch to the remote repo: 
**git push origin + name of the branch **

__


to get the last updates from all the changes from the remote branches:
**git fetch**
OR
**git fetch origin **

**بيجيبلك كل المعلومات الجديده من الريموت**

لو عملت اي تعديلات ع ال remote 
وعاوز تجيبها فى ال local 
ف انت بتستخدم الامر ده عشان يجيبلك كل التعديلات الى عملتها ف ال remote 
 يخليها موجوده ف ال remote branches 
الموجوده ف ال local 

ولكن ده مش معناه انها هتكون موجوده ف ال local 
بشكل رسمي علطول (في حاجه مسئوله عن كده هتقابلنا كمان شويه)

وده عشان لو انت عملت تعديلات فى ال remote
 ف التعديلات دي مش بتتغير بشكل اوتوماتيك 

لازم تعملها fetch 
عشان تسمع عندك ف ال local

---------------- DELETE BRANCH --------------------------

git branch -d +name of the branch 
try to delete a specified branch 

as an Alert🚨🚨
this is the dry run of the command 
this happens when you are trying to remove un merged changes

but if you are strongly sured that you need to remove the branch 
use the following command🔻: 

git branch -D +name of the branch 
Delete a specified branch now
the difference is the D in Capital Case

to delete a local branch :

**git branch -D + name of the branch **

to delete a branch from the remote repo :
**git push origin --delete + name of the branch **

1- delete it locally : **git branch -D + name of the branch **
2- git push origin --delete + name of the branch

بكتب origin 
عشان انا عملت تعديل ف الريبو بالكامل مش تعديل ف برانش ف انا عاوز التعديل يكون علي مستوي الريبو كلها

___

🚨🚨🚨🚨🚨🚨🚨🚨🚨🚨🚨
لو حذفت برانش وعاوز ارجعله بقا؟
هحتاج ارجع ل اخر commit
 ف البرانش 
طب ازاي؟ 
**git checkout +Commit ID**
طب اجيبها ازاي ومش معايا ال ID
**git reflog **
هيديك ال ID بتاعها

مينفعش استخدم 
**git reset **
 عشان اصلا البرانش مش موجود

خلاص يبقا اتنقل ل ال 
commit
 الاول ب ال ID
  الى جبته

وبعدها كده هيكون معايا اخر 
commit 
فيها اخر تعديلات وكل حاجه حصلت قبلها موجوده

بمعني اصح معايا ال commit
 الى شامله محتوي كل البرانش

خلاص يبقا اعمل 
**git checkout **
 عليها وبعدها اكريت برانش 
  واعمل بوش للتعديلات بتاعه الكوميت الى ف ايدي دي

**git switch -c (name of the branch)**

وبكده هبقا عملت برانش جديد نسخه طبق الاصل للبرانش الى حذفته وبكده كأني استرجعته

🚨🚨🚨

عشان اعمل
 rename  ل برانش 
**git branch -M + name of the branch**

عشان اربط الريبو ال local 
ب الريبو على githup 

**git remote add origin + link of the repo **

origin 
دي انا كده بقوله ان لو لقيت الكلمه دي شيلها وحط اللينك بتاع الريبو

عشان ارفع 
**git push  -u origin main**

-u 
اختصار لكلمه up stream
ودي الى بتخلي اللوكال برانش يعمل تراك على الريموت برانش
 من غير م اضطر اكتب اسم البرانش او 
 origin

-------- REBASE -----------
**Rebase**

لو عاوز احرك برانش ع ال main 
يبدأ من مكان اخر commit
 ف ال
main بعمل ايه؟

اول حاجه روح للبرانش الى عاوز تعمله rebase 
(تنقله)

**git switch +name of branch (Example development )**

بعد كده بتكتب الامر ده 
**git rebase +(name of the source branch {example main} )**

لو عاوز اجيب تعديلات صغيره بس من مكان واحطها ف ال برانش الى انا فيه 

مثلا انا برانش ال main 
**git switch main**
** git cherry-pick + ID (of the needed commit )**



------------------------------------------

git ls-files
show the tracked files which moved before to the staging area

git status 
show the current state of the tracked and un tracked files

---------------------------------------------------------
🚨🚨🚨Merging🚨🚨🚨
قبل م تعمل ميرج لازم تروح للمكان الى عاوز تعمل ميرج فيه يعني لو عاوز تعمل ميرج لبرانش ف
 الmain
يبقا لازم تروح لل
main 
وتبدأ تكتب الامر بتاع الميرج هناك ف ال 
main

طب ايه الامر؟🔻

source --> the changes in the branch we want to merge into the destination branch ( example : main is destination and XXX is the source branch ) 

git merge + name of source branch(EXample XXX) 

-------------------------------------------
if you want to remove un tracked files you can use two options :

git clean -dn
this will try to remove un tracked files or directories 

-dn
d--> abbreviation to directory 
n--> abbreviation to dry run

معناه يعني جرب تحذف ف اما تضغط انتر هيقولك ايه الفايلات الى ممكن يحذفها 

git clean -df
this will delete the un tracked files or directories 

-df
d--> abbreviation to directory 
f--> abbreviation to force 
معناه احذف بالفعل 


🚨🚨🚨
انواع ال Merge 

**fast-forward merge**
**Non-fast-forward merge**

**1- fast-forward merge **
ده بيحصل لو انت عملت merge
 لبرانش على ال main branch 
و ال main 
كان فاضى يعني مفيش فيه تعديلات من بعد م كريت البرانش الى انت بتعمله merge
 على ال main


-----------------------------
TO DISCARD THE FILE CHANGES

git restore + file name 
to discard the changes on the specified file

git restore  .
to discard all the changes on all files

git checkout + file name
this will discard the updates un staged (un committed) on the file 

BECAUSE
     it will return to the latest commit state

git rm + file name 
delete the specified file
then 🔻
git commit 
to save changes

git restore --staged +file name
to unstage file from the staged area (this makes the file unstaged)

then discard changes

git restore +file name
to discard changes 

git  reset +file name 
to remove the file from the staging area (makes the file un staged)

------------------------------------------

git reset head~ + N

this will remove N number of commits from the top of the commit's stack 

N represents the number of the commits needed to be removed

and it makes the last commit after reset(remove) not staged 


this means 🔻:
it makes two steps backward      ( working dir and staging area )

git reset --soft  head~ + N
this makes the same thing 

but
    it makes one step ( Step by Step) 

so
    it removes the file or the commit from the working dir 

but
    it still remains in the staging area

git reset --hard  head~ + N
his makes the same thing 

but
    it makes all the Delete steps 
so
    it removes the file or the commit from the working dir and staging area and  Discards the modified lines or files 

This means 🔻:
the Entire changes for the specified commit will be brune (Deleted) 

-----------------STASHING-----------------------


وانت شغال متعملش (commit) 
غير لوضع سليم 
طب لو انا عملت تعديلات مش كامله وعاوز اروح واسيب ده دلوقتي 
 لبرانش تاني اعمل حاجه 
  وابقا ارجعله بس انا لسه مخلصتش التعديلات الى بعملها في الى انا واقف فيه؟


هنا جيت  مش هيسمحلك تروح للبرانش التاني الا في حالتين
 ي تعمل commit
 للتعديلات وده مش صح لان التعديلات لسه مش كامله 
ي اما تعمل حاجه اسمها stash 

طب stash بتعمل ايه 

**git stash **
هيحتفظلك بالتعديلات مؤقتا لحد م تروح تعمل الى انت عاوزه وترجع تاني 

طب انا روحت عملت الى انا عاوزه وعاوز ارجع الاقي التعديلات بتاعتي؟
اعمل 

**git stash apply **

هيرجعلك الحاجات الى انت عملتلها stash 
قبل م تعمل 
switch للبرانش التاني

ّ

تقدر تعمل اكتر من stash
 ودول كلهم هيتخزنوا ف ال
 working directory 
على هيئه list 

**git stash list**

طب لو عاوز اتحرك لمكان و اعمل
 stash apply ل stash 
معينه انا كنت حافظها؟

هتروح للمكان وتعمل stash list 
وتختار ال id بتاع ال stash 
الى انت عاوزها وتكمل عادي 

**git stash apply +id **
**EXAMPLE:    git stash apply 1**
لو عملت stash apply بس علطول
 ف ده بيجيب اخر stash 
اتعملت يعني زيه زي ال top of the stack

~

طب لو عاوز احذف stash معينه

كل الى هعمله اني هعمل 
**git stash drop +ID**

هيحذفها

طب لو عاوز احذف كل ال stash الى انا عملتها ؟

**git stash clear**

طب لو عاوز اميز stash 
بمسج معينه

**git stash push -m " Here you can write your message" **

كده عملت stash
 ب مسج عشان توضحلي التغيير الى حصل 

عاوز اشوف بقا الكلام ده 

**git stash list **
هيظهرلك المسج جمب الid 
بتاع الstash

طب لو قولتلك انا عاوز اجيب تعديل معين وبعدها امسحه م ال stash list 

هتقولي عادي هروح اعمل 
**git stash list **
**git stash apply + ID(x)**
**git stash drop + ID(x)**


طب تمام لو عاوز اعمل ده بطريقه مختصره شويه؟

يبقا هستخدم الامر ده :

**git stash pop **
ده هيعمل حاجتين 

اول حاجه هيطبق التعديلات الى موجوده ف ال stash 
تاني حاجه هيحذفها م ال stashed working area


when you run git stash pop:

**Apply changes**: It takes the changes saved in the most recent stash and applies them to your current working directory.
**Remove stash**: After applying the changes, it removes the stash from the stash stack, essentially "popping" it off the stack.

**Key points:**
**Top of the stack**: By default, git stash pop only applies and removes the top-most stash in the stack.
🚨🚨🚨🚨🚨🚨🚨🚨🚨
**Specific stash**: If you want to apply and pop a specific stash (not the top one), you can do that by specifying the stash identifier like so:

**git stash pop stash@{2}**
This will apply and remove the stash with the identifier stash@{2} (the third stash in the list).

------------ Up stream ---------------

**git push  --set-upstream origin main**

دي بتعمل اتشانل بينك وبين ال remote repo
 وانت شغال ف ال local repo 

في امر مختصر واسرع
**git push -u origin main**

عشان اربط الريبو ال local 
ب الريبو على githup 

**git remote add origin + link of the repo **

origin 
دي انا كده بقوله ان لو لقيت الكلمه دي شيلها وحط اللينك بتاع الريبو

عشان ارفع 
**git push  -u origin main**

-u 
اختصار لكلمه up stream
ودي الى بتخلي اللوكال برانش يعمل تراك على الريموت برانش
 من غير م اضطر اكتب اسم البرانش او 
 origin

-------------------------------------

git pull
this command is 2 in 1 (contains two commands implicitly ):

2- git fetch
catch all the new information from remote 

1- git merge
merge the new updates into the local workspace
{if it's completely Ok it makes fast forward merge} 

